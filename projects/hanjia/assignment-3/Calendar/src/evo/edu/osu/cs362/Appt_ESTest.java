/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 01:41:50 GMT 2017
 */

package edu.osu.cs362;

import org.junit.Test;
import static org.junit.Assert.*;
import edu.osu.cs362.Appt;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Appt_ESTest extends Appt_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Appt appt0 = new Appt(2, 2, 12, 12, 2, "", "nL#&.x");
      boolean boolean0 = appt0.getValid();
      assertEquals(12, appt0.getStartMonth());
      assertEquals(12, appt0.getStartDay());
      assertTrue(boolean0);
      assertEquals(2, appt0.getStartHour());
      assertEquals(2, appt0.getStartYear());
      assertEquals("nL#&.x", appt0.getDescription());
      assertEquals(2, appt0.getStartMinute());
      assertEquals("", appt0.getTitle());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 0, 0, 0, "lgX6ir1o^3430cY~P", "lgX6ir1o^3430cY~P");
      String string0 = appt0.getTitle();
      assertEquals(0, appt0.getStartYear());
      assertEquals(0, appt0.getStartHour());
      assertEquals(0, appt0.getStartDay());
      assertFalse(appt0.getValid());
      assertEquals(0, appt0.getStartMinute());
      assertEquals("lgX6ir1o^3430cY~P", string0);
      assertEquals("lgX6ir1o^3430cY~P", appt0.getDescription());
      assertEquals(0, appt0.getStartMonth());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Appt appt0 = new Appt(562, 562, 451, 562, 100, "InvalidXGCValue-fractional", "InvalidXGCValue-fractional");
      int int0 = appt0.getStartYear();
      assertEquals("InvalidXGCValue-fractional", appt0.getDescription());
      assertEquals(100, int0);
      assertEquals(562, appt0.getStartHour());
      assertFalse(appt0.getValid());
      assertEquals(562, appt0.getStartMonth());
      assertEquals(451, appt0.getStartDay());
      assertEquals(562, appt0.getStartMinute());
      assertEquals("InvalidXGCValue-fractional", appt0.getTitle());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Appt appt0 = new Appt(59, 0, 735, 0, (-2589), "D|X4q[", "D|X4q[");
      int int0 = appt0.getStartMonth();
      assertEquals(0, int0);
      assertEquals("D|X4q[", appt0.getDescription());
      assertEquals(-2589, appt0.getStartYear());
      assertFalse(appt0.getValid());
      assertEquals("D|X4q[", appt0.getTitle());
      assertEquals(59, appt0.getStartHour());
      assertEquals(0, appt0.getStartMinute());
      assertEquals(735, appt0.getStartDay());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Appt appt0 = new Appt((-1), (-1), (-1), 11, 0, "", "");
      int int0 = appt0.getStartMonth();
      assertEquals(-1, appt0.getStartHour());
      assertEquals(0, appt0.getStartYear());
      assertFalse(appt0.getValid());
      assertEquals(11, int0);
      assertEquals(-1, appt0.getStartMinute());
      assertEquals(-1, appt0.getStartDay());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 31, (-1180), 31, "GMT", "mrKm");
      int int0 = appt0.getStartMinute();
      assertEquals(31, appt0.getStartYear());
      assertEquals(0, appt0.getStartHour());
      assertEquals("mrKm", appt0.getDescription());
      assertEquals(31, appt0.getStartDay());
      assertEquals("GMT", appt0.getTitle());
      assertEquals(-1180, appt0.getStartMonth());
      assertFalse(appt0.getValid());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Appt appt0 = new Appt(3884, 3884, 3884, 31, (-536), "", "");
      int int0 = appt0.getStartMinute();
      assertEquals(31, appt0.getStartMonth());
      assertEquals(3884, int0);
      assertEquals(3884, appt0.getStartDay());
      assertFalse(appt0.getValid());
      assertEquals(-536, appt0.getStartYear());
      assertEquals(3884, appt0.getStartHour());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 0, 0, 0, "lgX6ir1o^3430cY~P", "lgX6ir1o^3430cY~P");
      int int0 = appt0.getStartHour();
      assertEquals("lgX6ir1o^3430cY~P", appt0.getDescription());
      assertEquals(0, appt0.getStartYear());
      assertFalse(appt0.getValid());
      assertEquals(0, appt0.getStartMonth());
      assertEquals(0, appt0.getStartMinute());
      assertEquals("lgX6ir1o^3430cY~P", appt0.getTitle());
      assertEquals(0, int0);
      assertEquals(0, appt0.getStartDay());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Appt appt0 = new Appt((-1947), 2540, (-1947), 2540, 37, "l*l0KfnoU[Bi CTFIK\"", "mtL[");
      int int0 = appt0.getStartHour();
      assertEquals(-1947, appt0.getStartDay());
      assertEquals(37, appt0.getStartYear());
      assertFalse(appt0.getValid());
      assertEquals(2540, appt0.getStartMonth());
      assertEquals(2540, appt0.getStartMinute());
      assertEquals((-1947), int0);
      assertEquals("l*l0KfnoU[Bi CTFIK\"", appt0.getTitle());
      assertEquals("mtL[", appt0.getDescription());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 0, 115, 0, "j", "\n");
      int int0 = appt0.getStartDay();
      assertEquals(0, appt0.getStartHour());
      assertEquals("j", appt0.getTitle());
      assertEquals(0, appt0.getStartYear());
      assertFalse(appt0.getValid());
      assertEquals("\n", appt0.getDescription());
      assertEquals(115, appt0.getStartMonth());
      assertEquals(0, int0);
      assertEquals(0, appt0.getStartMinute());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Appt appt0 = new Appt(2562, 2562, 1000, 2562, 1000, "org.apache.xerces.jaxp.datatype.DurationImpl", "org.apache.xerces.jaxp.datatype.DurationImpl");
      int int0 = appt0.getStartDay();
      assertEquals(1000, int0);
      assertEquals("org.apache.xerces.jaxp.datatype.DurationImpl", appt0.getDescription());
      assertFalse(appt0.getValid());
      assertEquals("org.apache.xerces.jaxp.datatype.DurationImpl", appt0.getTitle());
      assertEquals(2562, appt0.getStartHour());
      assertEquals(2562, appt0.getStartMinute());
      assertEquals(2562, appt0.getStartMonth());
      assertEquals(1000, appt0.getStartYear());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 31, (-1180), 31, "GMT", "mrKm");
      String string0 = appt0.getDescription();
      assertEquals(0, appt0.getStartHour());
      assertEquals(31, appt0.getStartYear());
      assertEquals(31, appt0.getStartDay());
      assertFalse(appt0.getValid());
      assertEquals(0, appt0.getStartMinute());
      assertEquals(-1180, appt0.getStartMonth());
      assertEquals("mrKm", string0);
      assertEquals("GMT", appt0.getTitle());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 0, 2721, 0, "", "");
      appt0.setDescription("");
      assertEquals(0, appt0.getStartHour());
      assertEquals(0, appt0.getStartMinute());
      assertEquals(0, appt0.getStartDay());
      assertEquals(2721, appt0.getStartMonth());
      assertEquals(0, appt0.getStartYear());
      assertFalse(appt0.getValid());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Appt appt0 = new Appt((-798), (-1138), (-1138), 0, 1774, (String) null, (String) null);
      appt0.setDescription((String) null);
      assertEquals(-1138, appt0.getStartMinute());
      assertEquals(-1138, appt0.getStartDay());
      assertEquals(-798, appt0.getStartHour());
      assertEquals(0, appt0.getStartMonth());
      assertFalse(appt0.getValid());
      assertEquals(1774, appt0.getStartYear());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Appt appt0 = new Appt((-216), (-216), (-216), (-216), (-216), "9jt/2X!#5", "9jt/2X!#5");
      appt0.setTitle("3 ][}RL6DN2-");
      assertEquals("3 ][}RL6DN2-", appt0.getTitle());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Appt appt0 = new Appt(59, 59, 59, 0, 29, (String) null, (String) null);
      appt0.setTitle((String) null);
      assertEquals(59, appt0.getStartDay());
      assertEquals(59, appt0.getStartMinute());
      assertEquals(29, appt0.getStartYear());
      assertEquals(59, appt0.getStartHour());
      assertFalse(appt0.getValid());
      assertEquals(0, appt0.getStartMonth());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Appt appt0 = new Appt(11, 11, 11, 11, 11, "Q$gdX:_o2$Z<fQ", "Q$gdX:_o2$Z<fQ");
      String string0 = appt0.toString();
      assertNotNull(string0);
      assertEquals("\t11/11/11 at 11:11am ,Q$gdX:_o2$Z<fQ, Q$gdX:_o2$Z<fQ\n", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Appt appt0 = new Appt(14, 14, 14, 14, 14, "(f#kl |B>p(QB", "(f#kl |B>p(QB");
      appt0.setStartYear((-1621));
      int int0 = appt0.getStartYear();
      assertEquals((-1621), int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Appt appt0 = new Appt((-798), (-1138), (-1138), 0, 1774, (String) null, (String) null);
      appt0.setStartMonth(3909);
      assertEquals(3909, appt0.getStartMonth());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Appt appt0 = new Appt((-2402), (-2599), 0, (-2284), (-2599), "", (String) null);
      assertEquals(-2599, appt0.getStartMinute());
      
      appt0.setStartMinute((-2402));
      assertEquals(-2599, appt0.getStartYear());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Appt appt0 = new Appt(23, 23, 9, 9, 23, "m", "m");
      String string0 = appt0.toString();
      assertEquals("\t9/9/23 at 11:23pm ,m, m\n", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 5, 5, 0, "yq/)S^p_", "yq/)S^p_");
      String string0 = appt0.toString();
      assertNotNull(string0);
      assertEquals("\t5/5/0 at 12:0am ,yq/)S^p_, yq/)S^p_\n", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Appt appt0 = new Appt(14, 14, 14, 14, 14, "(f#kl |B>p(QB", "(f#kl |B>p(QB");
      String string0 = appt0.toString();
      assertEquals("(f#kl |B>p(QB", appt0.getDescription());
      assertEquals(14, appt0.getStartMonth());
      assertEquals(14, appt0.getStartYear());
      assertEquals(14, appt0.getStartHour());
      assertEquals(14, appt0.getStartMinute());
      assertEquals(14, appt0.getStartDay());
      assertNull(string0);
      assertEquals("(f#kl |B>p(QB", appt0.getTitle());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Appt appt0 = new Appt(59, 59, 59, 0, 29, (String) null, (String) null);
      assertEquals(59, appt0.getStartHour());
      
      appt0.setStartHour(0);
      assertEquals(29, appt0.getStartYear());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Appt appt0 = new Appt(1142, 1142, 1142, 1142, 1142, "!hc!y\u0002kq?e", "!hc!y\u0002kq?e");
      appt0.setStartHour(0);
      assertEquals(0, appt0.getStartHour());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Appt appt0 = new Appt((-1130), (-1130), (-1130), 2000, (-1130), "", "");
      assertEquals(-1130, appt0.getStartDay());
      
      appt0.setStartDay(2000);
      assertEquals(2000, appt0.getStartMonth());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Appt appt0 = new Appt(1597, 1597, 0, 0, 0, (String) null, (String) null);
      String string0 = appt0.getTitle();
      assertFalse(appt0.getValid());
      assertEquals(0, appt0.getStartDay());
      assertEquals(1597, appt0.getStartMinute());
      assertEquals(0, appt0.getStartMonth());
      assertNotNull(string0);
      assertEquals(1597, appt0.getStartHour());
      assertEquals(0, appt0.getStartYear());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 12, 12, 0, "", ", ");
      int int0 = appt0.getStartYear();
      assertTrue(appt0.getValid());
      assertEquals(12, appt0.getStartMonth());
      assertEquals(0, appt0.getStartHour());
      assertEquals(0, int0);
      assertEquals(12, appt0.getStartDay());
      assertEquals(0, appt0.getStartMinute());
      assertEquals(", ", appt0.getDescription());
      assertEquals("", appt0.getTitle());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Appt appt0 = new Appt(1783, (-2177), (-2177), (-2177), (-2177), "FieldCannotBeNull", "FieldCannotBeNull");
      int int0 = appt0.getStartDay();
      assertEquals("FieldCannotBeNull", appt0.getTitle());
      assertFalse(appt0.getValid());
      assertEquals(1783, appt0.getStartHour());
      assertEquals(-2177, appt0.getStartMonth());
      assertEquals(-2177, appt0.getStartYear());
      assertEquals(-2177, appt0.getStartMinute());
      assertEquals((-2177), int0);
      assertEquals("FieldCannotBeNull", appt0.getDescription());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Appt appt0 = new Appt(454, 3287, 2207, 3287, 454, ":", ":");
      int int0 = appt0.getStartHour();
      assertFalse(appt0.getValid());
      assertEquals(3287, appt0.getStartMinute());
      assertEquals(3287, appt0.getStartMonth());
      assertEquals(":", appt0.getDescription());
      assertEquals(454, int0);
      assertEquals(":", appt0.getTitle());
      assertEquals(454, appt0.getStartYear());
      assertEquals(2207, appt0.getStartDay());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Appt appt0 = new Appt(1597, 1597, 0, 0, 0, (String) null, (String) null);
      String string0 = appt0.getDescription();
      assertNotNull(string0);
      assertEquals(1597, appt0.getStartHour());
      assertEquals(1597, appt0.getStartMinute());
      assertEquals(0, appt0.getStartMonth());
      assertEquals(0, appt0.getStartDay());
      assertFalse(appt0.getValid());
      assertEquals(0, appt0.getStartYear());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Appt appt0 = new Appt(931, 931, 931, (-149), 931, "{;", "O,");
      int int0 = appt0.getStartMonth();
      assertEquals("O,", appt0.getDescription());
      assertEquals("{;", appt0.getTitle());
      assertEquals(931, appt0.getStartDay());
      assertEquals(931, appt0.getStartMinute());
      assertEquals((-149), int0);
      assertFalse(appt0.getValid());
      assertEquals(931, appt0.getStartHour());
      assertEquals(931, appt0.getStartYear());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Appt appt0 = new Appt(59, 0, 0, 0, 59, "{6\"z&zRMH", "{6\"z&zRMH");
      boolean boolean0 = appt0.getValid();
      assertEquals(0, appt0.getStartMinute());
      assertEquals(0, appt0.getStartMonth());
      assertFalse(boolean0);
      assertEquals(0, appt0.getStartDay());
      assertEquals(59, appt0.getStartYear());
      assertEquals(59, appt0.getStartHour());
      assertEquals("{6\"z&zRMH", appt0.getTitle());
      assertEquals("{6\"z&zRMH", appt0.getDescription());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Appt appt0 = new Appt(0, (-2386), 0, (-596), (-596), "--%M--%z", "--%M--%z");
      int int0 = appt0.getStartMinute();
      assertEquals("--%M--%z", appt0.getDescription());
      assertFalse(appt0.getValid());
      assertEquals(0, appt0.getStartHour());
      assertEquals(-596, appt0.getStartYear());
      assertEquals(0, appt0.getStartDay());
      assertEquals((-2386), int0);
      assertEquals(-596, appt0.getStartMonth());
      assertEquals("--%M--%z", appt0.getTitle());
  }
}
